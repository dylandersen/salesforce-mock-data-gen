public with sharing class KnowledgeArticleGenerator {
    
    /**
     * Wrapper class for knowledge article data from the prompt template
     */
    public class KnowledgeArticleData {
        public String title;
        public String summary; 
        public String question;
        public String answer;
        public String urlName;
        public String language; // Default to en_US
        public String articleType; // e.g., FAQ, How_To, Troubleshooting
        public String dataCategory;
        public String dataCategoryGroup;
    }
    
    /**
     * Result wrapper for the response
     */
    public class KnowledgeArticleGenerationResult {
        @InvocableVariable public Boolean success;
        @InvocableVariable public String message;
        @InvocableVariable public Integer articlesCreated;
        @InvocableVariable public String articleIdList; // Comma-separated list of created IDs
        
        public KnowledgeArticleGenerationResult() {
            this.success = false;
            this.articlesCreated = 0;
            this.articleIdList = '';
        }
    }
    
    /**
     * Creates knowledge articles from JSON data generated by the prompt template
     * @param topicArea The topic area for the knowledge articles
     * @param articleJsonData JSON string containing array of knowledge article data
     * @return KnowledgeArticleGenerationResult with success status and created article IDs
     */
    @InvocableMethod(label='Generate Knowledge Articles from JSON' description='Creates Knowledge Articles from JSON data for a given topic area')
    public static List<KnowledgeArticleGenerationResult> createArticlesFromJson(List<KnowledgeArticleGenerationRequest> requests) {
        List<KnowledgeArticleGenerationResult> results = new List<KnowledgeArticleGenerationResult>();
        
        for (KnowledgeArticleGenerationRequest request : requests) {
            KnowledgeArticleGenerationResult result = new KnowledgeArticleGenerationResult();
            
            try {
                // Validate inputs
                if (String.isBlank(request.topicArea)) {
                    result.message = 'Topic Area is required';
                    results.add(result);
                    continue;
                }
                
                if (String.isBlank(request.articleJsonData)) {
                    result.message = 'Knowledge Article JSON data is required';
                    results.add(result);
                    continue;
                }
                
                // Parse JSON and create knowledge articles
                List<KnowledgeArticleData> articleDataList = (List<KnowledgeArticleData>) JSON.deserialize(
                    request.articleJsonData, 
                    List<KnowledgeArticleData>.class
                );
                
                // Validate article count if provided
                if (request.expectedArticleCount != null && articleDataList.size() != request.expectedArticleCount) {
                    result.message = 'Expected ' + request.expectedArticleCount + ' articles but received ' + articleDataList.size() + ' from prompt template';
                    results.add(result);
                    continue;
                }
                
                List<Knowledge__kav> articlesToInsert = new List<Knowledge__kav>();
                
                for (KnowledgeArticleData articleData : articleDataList) {
                    Knowledge__kav newArticle = new Knowledge__kav();
                    newArticle.Title = articleData.title;
                    newArticle.Summary = articleData.summary;
                    newArticle.UrlName = articleData.urlName;
                    newArticle.Language = String.isNotBlank(articleData.language) ? articleData.language : 'en_US';
                    
                    // Set article type and data categories if provided
                    if (String.isNotBlank(articleData.articleType)) {
                        // Note: RecordType assignment would need to be handled based on your org's setup
                        // newArticle.RecordTypeId = getRecordTypeId(articleData.articleType);
                    }
                    
                    articlesToInsert.add(newArticle);
                }
                
                // Insert knowledge articles
                if (!articlesToInsert.isEmpty()) {
                    insert articlesToInsert;
                    
                    // Collect article IDs for response as comma-separated string
                    List<String> articleIds = new List<String>();
                    for (Knowledge__kav article : articlesToInsert) {
                        articleIds.add(article.Id);
                    }
                    result.articleIdList = String.join(articleIds, ',');
                    
                    result.success = true;
                    result.articlesCreated = articlesToInsert.size();
                    String topicText = String.isNotBlank(request.topicArea) ? ' for ' + request.topicArea + ' topic area' : '';
                    result.message = 'Successfully created ' + articlesToInsert.size() + ' knowledge articles' + topicText;
                } else {
                    result.message = 'No valid knowledge article data found in JSON';
                }
                
            } catch (JSONException e) {
                result.message = 'Invalid JSON format: ' + e.getMessage();
                System.debug('JSON parsing error: ' + e.getMessage());
            } catch (DmlException e) {
                result.message = 'Error creating knowledge articles: ' + e.getMessage();
                System.debug('DML error: ' + e.getMessage());
            } catch (Exception e) {
                result.message = 'Unexpected error: ' + e.getMessage();
                System.debug('Unexpected error: ' + e.getMessage());
            }
            
            results.add(result);
        }
        
        return results;
    }
    
    /**
     * Input wrapper for the invocable method
     */
    public class KnowledgeArticleGenerationRequest {
        @InvocableVariable(label='Topic Area' description='The topic area or industry for knowledge articles' required=true)
        public String topicArea;
        
        @InvocableVariable(label='Knowledge Article JSON Data' description='JSON array containing knowledge article data from prompt template' required=true)
        public String articleJsonData;
        
        @InvocableVariable(label='Expected Article Count' description='Expected number of articles to validate against' required=false)
        public Integer expectedArticleCount;
        
        @InvocableVariable(label='Industry' description='Industry type for logging and validation' required=false)
        public String industry;
    }
}
